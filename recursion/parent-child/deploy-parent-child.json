{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {
        "Init Template URL": "https://raw.githubusercontent.com/vplauzon/logic-apps/master/recursion/parent-child/deploy-parent-child-init.json",
        "Parent Logic App Name": "parent-app",
        "Parent Logic App Id": "[resourceId('Microsoft.Logic/workflows', variables('Parent Logic App Name'))]",
        "Child Logic App Name": "child-app",
        "Child Logic App Id": "[resourceId('Microsoft.Logic/workflows', variables('Child Logic App Name'))]"
    },
    "resources": [
        {
            "name": "Init",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('Init Template URL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Parent Logic App Name": {
                        "value": "[variables('Parent Logic App Name')]"
                    },
                    "Child Logic App Name": {
                        "value": "[variables('Child Logic App Name')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "name": "[variables('Parent Logic App Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'Init')]"
            ],
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Response": {
                                    "runAfter": {
                                        "child": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "@concat(body('Parse_Iterations')?['iterations'], ', ', body('child'))",
                                        "statusCode": 200
                                    }
                                },
                                "child": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@sub(body('Parse_Iterations')?['iterations'], 1)",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[variables('Child Logic App Id')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_Iterations": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Response_2": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": "Done!",
                                            "statusCode": 200
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@body('Parse_Iterations')?['iterations']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_Iterations": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "iterations": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "name": "[variables('Child Logic App Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'Init')]"
            ],
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "parent": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@body('parent')",
                                "statusCode": 200
                            }
                        },
                        "parent": {
                            "runAfter": {},
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "iterations": "@triggerBody()"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[variables('Parent Logic App Id')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {
        "access-point": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Logic/workflows', variables('Parent Logic App Name'))).accessEndpoint]"
        }
    }
}